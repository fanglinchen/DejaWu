webpackHotUpdate("content",{

/***/ "./src/js/content.js":
/*!***************************!*\
  !*** ./src/js/content.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var siphon_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! siphon-tools */ \"./node_modules/siphon-tools/src/index.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nlet blueProgressBar = `<div class=\"ytp-play-progress ytp-swatch-background-color blueProgress\"></div>`;\n__webpack_require__(/*! arrive */ \"./node_modules/arrive/src/arrive.js\");\n\n\nlet videoObj, videoDuration, query, videoUrl;\nlet currentUrl = document.location.href;\nlet startTime = new Date().getTime();\nlet endTime = new Date().getTime();\nlet currentPosition,lastPosition,lastVideoTime, lastVideoSnippetStartTime = 0;\nconst LONG_ENOUGH_MS = 8000;\nlet ghostElement, startPos, startY;\nlet _cptrWindow;\nsiphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"default\"].initializeSelectors([\n    Object(siphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"SnippetSelector\"])({\n        onTrigger: (cptrWindow, e) => {\n            _cptrWindow = cptrWindow;\n            let rect = cptrWindow.getBoundingClientRect();\n            console.log(rect);\n            let annotation = new siphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"Snippet\"](rect);\n            console.log(annotation);\n\n            console.log(\"test keydown\"); \n            document.addEventListener('keydown', keyDownHandler, false);\n            \n        }\n    })\n]);\n\nsiphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable();\n\n// setTimeout(()=>{\n//     _cptrWindow.remove()\n// }, 5000)\n\nfunction isPlayingYoutubeAd(){\n    return jquery__WEBPACK_IMPORTED_MODULE_1___default()(\".ytp-play-progress\").css(\"background-color\") === \"rgb(255, 204, 0)\";\n}\n\n\n/**\n * handle pressing esc to quit screenshot\n * @param {*} e \n */\nfunction keyDownHandler(e) {\n    if ( e.key === 'Escape') {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log(\"esc pressed\")\n        _cptrWindow.remove()\n        \n        \n        return false;\n    }\n}\n\n\n\nfunction removeMarkers(){\n    console.log(\"remove markers...\");\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()('div.ytp-play-progress.ytp-swatch-background-color').remove('.blueProgress');\n}\n\n\nfunction isCode(e){\n    let cur = e.target;\n    while(cur.tagName.toLowerCase()!==\"code\" && (cur=cur.parentNode)!==document.body);\n    //If the highest element tracked by the cursor can be ascribed to <code>.\n    return cur.tagName.toLowerCase()===\"code\";\n}\n\nfunction fetchSectionId(e){\n    let cur = e?e.target:null;\n    if(cur)\n        while(!cur.hasAttribute(\"id\") && (cur=cur.parentNode)!==document.body);\n    return cur&&(cur.getAttribute(\"id\")||null);\n}\n\nfunction formatFileName(date) {\n    let year = date.getFullYear();\n    let _day = date.getDate();\n    let month = date.getMonth();\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let milliseconds = date.getMilliseconds();\n    let ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+ minutes : minutes;\n\n    return \"Screen Shot \" + year + \"-\" +\n        (month + 1) + \"-\" + _day + \" at \" + hours + '.' + minutes + '.' + milliseconds + \" \" + ampm + \".png\";\n}\n\n\nfunction goToPastPageSection(response) {\n    console.log(\"scrolling to \" + response);\n    window.scrollTo(0, response);//auto scroll function\n}\n\nfunction loadMarkers(start,end,duration) {\n    console.log(\"load markers.....\");\n    let $blueBar = jquery__WEBPACK_IMPORTED_MODULE_1___default()(blueProgressBar);\n    let ratio = end / duration - start / duration,\n        propValue = `scaleX(${ratio})`;\n    $blueBar.css('left', ((start / duration) * 100) + '%');\n    $blueBar.css('transform', propValue);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()('div.ytp-play-progress.ytp-swatch-background-color:not(.blueProgress)').after($blueBar);\n}\n\n\nfunction mouseUpHandler(e) {\n    e.preventDefault();\n\n    const diff = {x: Math.abs(parseInt(e.pageX)-parseInt(ghostElement.style.left)),\n        y: Math.abs(parseInt(e.pageY)-parseInt(ghostElement.style.top))};\n\n    //working with negative coordinates\n    let _w = diff.x;\n    let _h = diff.y;\n    let _x = startPos.x;\n    let _y = startY;\n\n    if(parseInt(e.pageY) < startPos.y){\n        //top right\n        _h = Math.abs(parseInt(e.pageY)-startPos.y);\n        _y -= _h;\n    }\n    if(parseInt(e.pageX) < startPos.x){\n        //left bottom\n        _w = Math.abs(parseInt(e.pageX)-startPos.x);\n        _x -= _w;\n    }\n\n    document.removeEventListener('mousemove', mouseMoveHandler, false);\n    document.removeEventListener('mouseup', mouseUpHandler, false);\n\n    ghostElement.parentNode.removeChild(ghostElement);\n    setTimeout(function() {\n        const coords = {\n            w: _w,\n            h: _h,\n            x: _x,\n            y: _y\n        };\n        endScreenshot(coords,false);\n    }, 50);\n\n    return false;\n}\n//quit screen shot\n// function keyDownHandler(e) {\n//     if ( e.key === 'Escape') {\n//         e.preventDefault();\n//         e.stopPropagation();\n//         endScreenshot(null, true);\n//         return false;\n//     }\n// }\n\n\n/**\n *\n * @param e\n * @returns {boolean}\n */\nfunction mouseMoveHandler(e) {\n    e.preventDefault();\n\n    const diff = {x: Math.abs(parseInt(e.pageX)-parseInt(ghostElement.style.left)),\n        y: Math.abs(parseInt(e.pageY)-parseInt(ghostElement.style.top))};\n\n    ghostElement.style.width = diff.x + 'px';\n    ghostElement.style.height = diff.y +'px';\n\n    //opposite drawing canvas (negative coords)\n    if(parseInt(e.pageY) < startPos.y){\n        ghostElement.style.top = e.pageY + 'px';\n        ghostElement.style.height = Math.abs(parseInt(e.pageY)-startPos.y)+'px';\n    }\n    if(parseInt(e.pageX) < startPos.x){\n        ghostElement.style.left = e.pageX+'px';\n        ghostElement.style.width = Math.abs(parseInt(e.pageX)-startPos.x)+'px';\n    }\n\n    return false;\n}\n\n/**\n *\n * @param e\n * @returns {boolean}\n */\nfunction mouseDownHandler(e) {\n    e.preventDefault();\n\n    // startPos = {x: e.pageX, y: e.pageY};\n    // startY = e.y;\n\n    // ghostElement = document.createElement('div');\n    // ghostElement.style.background = 'blue';\n    // ghostElement.style.opacity = '0.1';\n    // ghostElement.style.position = 'absolute';\n    // ghostElement.style.left = e.pageX + 'px';\n    // ghostElement.style.top = e.pageY + 'px';\n    // ghostElement.style.width = \"0px\";\n    // ghostElement.style.height = \"0px\";\n    // ghostElement.style.zIndex = \"1000000\";\n    // document.body.appendChild(ghostElement);\n\n    // document.addEventListener('mousemove', mouseMoveHandler, false);\n    // document.addEventListener('mouseup', mouseUpHandler, false);\n\n    return false;\n}\n\n/**\n * Save part of pages with long stay.\n */\nfunction scrollHandler() {\n    endTime = new Date().getTime();\n    if (endTime - startTime > LONG_ENOUGH_MS) {\n        chrome.runtime.sendMessage({\n                \"url\": currentUrl,\n                \"stay\": {\"position\": lastPosition,\n                    \"duration\": endTime - startTime,\n                    \"time\": [new Date()]}\n            },\n            function (response) {});\n    }\n    lastPosition = window.scrollY || window.pageYOffset\n        || document.body.scrollTop + (document.documentElement && document.documentElement.scrollTop || 0);\n    startTime = endTime;\n}\n\n/**\n * Data format:\n * <Url\n *          highlight:\n *          text\n *          section_id\n *          position\n *          time>\n */\nfunction saveHighlightedText(e)\n{\n    let content = extractSelectedText();\n    if(content!== \"\"){\n        console.log(\"currentUrl:\" + currentUrl);\n        console.log(\"currentPosition:\" + currentPosition);\n        chrome.runtime.sendMessage({\"url\": currentUrl,\n                \"highlight\":\n                    {\"text\": content,\n                        \"section_id\": fetchSectionId(e),\n                        \"position\": currentPosition,\n                        \"time\": [new Date()]}},\n            function(response) {});\n    }\n}\n\n/**\n * Data format:\n * <Url\n *          copy:\n *          text\n *          section_id\n *          is_code\n *          is_image_url\n *          time>\n */\nfunction saveCopiedText(e) {\n\n    let content = extractSelectedText();\n    if(content!== \"\"){\n        chrome.runtime.sendMessage({\"url\": currentUrl,\n                \"copy\": {\"text\": content,\n                    \"section_id\": fetchSectionId(e),\n                    \"is_code\" :  isCode(e),\n                    //\"is_image_url\": isImageUrl(content),\n                    \"time\": [new Date()]}},\n            function(response) {});\n    }\n    console.log(\"Sending!\");\n}\n\n/**\n * Extract selected text. Returns \"\" if no text selected.\n * @returns {string}\n */\nfunction extractSelectedText()\n{\n    let sel = window.getSelection();\n    if (sel) {\n        return sel.toString();\n    }\n}\n\n\n/**\n * Listen snippet data once a video element is created\n * Data format:\n * <Url\n *          snippet:\n *          start_time\n *          end_time\n *          time\n *  contains_video\n *  video_duration>\n */\ndocument.arrive('video', function (v) {\n    videoObj = v;\n    videoObj.ontimeupdate = function () {\n        if (!isPlayingYoutubeAd()) {\n            if (!isNaN(videoObj.duration)) {\n                videoDuration = videoObj.duration;\n            }\n            // if there is a big gap between the current play time and the last play time,\n            // the user has skipped/rewind the video\n            if (Math.abs(videoObj.currentTime - lastVideoTime) >= 10) {\n                console.log(\"snippet:\" + lastVideoSnippetStartTime + \" ---  \" + lastVideoTime);\n                if (lastVideoTime - lastVideoSnippetStartTime > 3) {\n                    chrome.runtime.sendMessage({\n                            \"url\": videoUrl,\n                            \"video_snippet\":\n                                {\n                                    \"start_time\": lastVideoSnippetStartTime,\n                                    \"end_time\": lastVideoTime,\n                                    \"duration\": videoDuration\n                                }\n                        },\n                        function (response) {\n                        });\n                }\n                lastVideoSnippetStartTime = videoObj.currentTime;\n                //TODO: handle rewind event.\n            }\n            lastVideoTime = videoObj.currentTime;\n        }\n    };\n\n    videoObj.onpause = function () {\n        console.log(\"paused\");\n    };\n\n    videoObj.onended = function () {\n        console.log(\"ended\");\n    };\n});\n\n\nfunction startScreenshot() {\n    console.log('start screenshot');\n    //change cursor\n    document.body.style.cursor = 'crosshair';\n    document.addEventListener('mousedown', mouseDownHandler, false);\n    //listener for quiting screenshot\n    document.addEventListener('keydown', keyDownHandler, false);\n}\n\nfunction endScreenshot(coords, quit) {\n    document.removeEventListener('mousedown', mouseDownHandler, false);\n    document.body.style.cursor = 'default';\n\n    if(quit){\n        //user pressed ESC quit screenshot. not sending any information.\n        document.removeEventListener('mousemove', mouseMoveHandler, false);\n        document.removeEventListener('mouseup', mouseUpHandler, false);\n\n        ghostElement.parentNode.removeChild(ghostElement);\n    }\n    else{\n\n        console.log('sending message with screenshoot');\n        chrome.runtime.sendMessage({\"url\": currentUrl,\n                \"screenshot\":{coordinates:coords, filename: formatFileName(new Date()), time: new Date()}},\n            function(response) {});\n\n    }\n\n}\n\n\n// Listening url changes for the current tab.\nchrome.runtime.onMessage.addListener( (message, sender, sendResponse) => {\n    currentUrl=message.url;\n    if (message.type === \"new_url\"){\n        let videoResponse=message.video;\n        let stayResponse=message.position;\n        //if has code ,don't go page section;\n        if(!currentUrl.includes(\"#\")){\n            goToPastPageSection(stayResponse);\n        }\n        setTimeout(function () {\n            console.log(\"new url:\", message.url);\n            videoUrl = message.url;\n            query = message.query;\n            // to know Url has already changed\n            if (videoUrl === currentUrl) {\n                if (currentUrl.includes(\"youtube.com\")) {\n                    removeMarkers();\n                    loadMarkers(videoResponse.start_time,videoResponse.end_time,videoResponse.duration);\n                }\n            }\n        }, 2000);\n    }\n    else if (message.type === \"start_screenshots\"){\n        startScreenshot();\n    }\n});\n\n\n// When the web page is about to be unloaded.\nwindow.onbeforeunload = function () {\n    if (currentUrl.includes(\"youtube.com\")) {\n        chrome.runtime.sendMessage({\n                \"url\": videoUrl,\n                \"video_snippet\":\n                    {\n                        \"start_time\": lastVideoSnippetStartTime,\n                        \"end_time\": lastVideoTime,\n                        \"duration\": videoDuration\n                    }\n            },\n            function (response) {});\n    } else {\n        // only considers scrolling positions when the web page is not video\n        endTime = new Date().getTime();\n        if (endTime - startTime > LONG_ENOUGH_MS) {\n            chrome.runtime.sendMessage({\n                    \"url\": currentUrl,\n                    \"stay\": {\n                        \"position\": lastPosition,\n                        \"duration\": endTime - startTime,\n                        \"time\": [new Date()]\n                    }\n                },\n                function (response) {});\n        }\n    }\n};\n\ndocument.addEventListener('copy', saveCopiedText);\ndocument.addEventListener('mouseup', saveHighlightedText);\nwindow.addEventListener('scroll', scrollHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY29udGVudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9jb250ZW50LmpzPzRmYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNpcGhvblRvb2xzIGZyb20gJ3NpcGhvbi10b29scydcbmltcG9ydCB7U25pcHBldFNlbGVjdG9yLCBTbmlwcGV0fSBmcm9tIFwic2lwaG9uLXRvb2xzXCJcblxubGV0IGJsdWVQcm9ncmVzc0JhciA9IGA8ZGl2IGNsYXNzPVwieXRwLXBsYXktcHJvZ3Jlc3MgeXRwLXN3YXRjaC1iYWNrZ3JvdW5kLWNvbG9yIGJsdWVQcm9ncmVzc1wiPjwvZGl2PmA7XG5yZXF1aXJlKFwiYXJyaXZlXCIpO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxubGV0IHZpZGVvT2JqLCB2aWRlb0R1cmF0aW9uLCBxdWVyeSwgdmlkZW9Vcmw7XG5sZXQgY3VycmVudFVybCA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG5sZXQgc3RhcnRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5sZXQgZW5kVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xubGV0IGN1cnJlbnRQb3NpdGlvbixsYXN0UG9zaXRpb24sbGFzdFZpZGVvVGltZSwgbGFzdFZpZGVvU25pcHBldFN0YXJ0VGltZSA9IDA7XG5jb25zdCBMT05HX0VOT1VHSF9NUyA9IDgwMDA7XG5sZXQgZ2hvc3RFbGVtZW50LCBzdGFydFBvcywgc3RhcnRZO1xubGV0IF9jcHRyV2luZG93O1xuU2lwaG9uVG9vbHMuaW5pdGlhbGl6ZVNlbGVjdG9ycyhbXG4gICAgU25pcHBldFNlbGVjdG9yKHtcbiAgICAgICAgb25UcmlnZ2VyOiAoY3B0cldpbmRvdywgZSkgPT4ge1xuICAgICAgICAgICAgX2NwdHJXaW5kb3cgPSBjcHRyV2luZG93O1xuICAgICAgICAgICAgbGV0IHJlY3QgPSBjcHRyV2luZG93LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVjdCk7XG4gICAgICAgICAgICBsZXQgYW5ub3RhdGlvbiA9IG5ldyBTbmlwcGV0KHJlY3QpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYW5ub3RhdGlvbik7XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidGVzdCBrZXlkb3duXCIpOyBcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBrZXlEb3duSGFuZGxlciwgZmFsc2UpO1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9KVxuXSk7XG5cblNpcGhvblRvb2xzLmVuYWJsZSgpO1xuXG4vLyBzZXRUaW1lb3V0KCgpPT57XG4vLyAgICAgX2NwdHJXaW5kb3cucmVtb3ZlKClcbi8vIH0sIDUwMDApXG5cbmZ1bmN0aW9uIGlzUGxheWluZ1lvdXR1YmVBZCgpe1xuICAgIHJldHVybiAkKFwiLnl0cC1wbGF5LXByb2dyZXNzXCIpLmNzcyhcImJhY2tncm91bmQtY29sb3JcIikgPT09IFwicmdiKDI1NSwgMjA0LCAwKVwiO1xufVxuXG5cbi8qKlxuICogaGFuZGxlIHByZXNzaW5nIGVzYyB0byBxdWl0IHNjcmVlbnNob3RcbiAqIEBwYXJhbSB7Kn0gZSBcbiAqL1xuZnVuY3Rpb24ga2V5RG93bkhhbmRsZXIoZSkge1xuICAgIGlmICggZS5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJlc2MgcHJlc3NlZFwiKVxuICAgICAgICBfY3B0cldpbmRvdy5yZW1vdmUoKVxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cblxuXG5mdW5jdGlvbiByZW1vdmVNYXJrZXJzKCl7XG4gICAgY29uc29sZS5sb2coXCJyZW1vdmUgbWFya2Vycy4uLlwiKTtcbiAgICAkKCdkaXYueXRwLXBsYXktcHJvZ3Jlc3MueXRwLXN3YXRjaC1iYWNrZ3JvdW5kLWNvbG9yJykucmVtb3ZlKCcuYmx1ZVByb2dyZXNzJyk7XG59XG5cblxuZnVuY3Rpb24gaXNDb2RlKGUpe1xuICAgIGxldCBjdXIgPSBlLnRhcmdldDtcbiAgICB3aGlsZShjdXIudGFnTmFtZS50b0xvd2VyQ2FzZSgpIT09XCJjb2RlXCIgJiYgKGN1cj1jdXIucGFyZW50Tm9kZSkhPT1kb2N1bWVudC5ib2R5KTtcbiAgICAvL0lmIHRoZSBoaWdoZXN0IGVsZW1lbnQgdHJhY2tlZCBieSB0aGUgY3Vyc29yIGNhbiBiZSBhc2NyaWJlZCB0byA8Y29kZT4uXG4gICAgcmV0dXJuIGN1ci50YWdOYW1lLnRvTG93ZXJDYXNlKCk9PT1cImNvZGVcIjtcbn1cblxuZnVuY3Rpb24gZmV0Y2hTZWN0aW9uSWQoZSl7XG4gICAgbGV0IGN1ciA9IGU/ZS50YXJnZXQ6bnVsbDtcbiAgICBpZihjdXIpXG4gICAgICAgIHdoaWxlKCFjdXIuaGFzQXR0cmlidXRlKFwiaWRcIikgJiYgKGN1cj1jdXIucGFyZW50Tm9kZSkhPT1kb2N1bWVudC5ib2R5KTtcbiAgICByZXR1cm4gY3VyJiYoY3VyLmdldEF0dHJpYnV0ZShcImlkXCIpfHxudWxsKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RmlsZU5hbWUoZGF0ZSkge1xuICAgIGxldCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgIGxldCBfZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgbGV0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgIGxldCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICBsZXQgbWludXRlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xuICAgIGxldCBtaWxsaXNlY29uZHMgPSBkYXRlLmdldE1pbGxpc2Vjb25kcygpO1xuICAgIGxldCBhbXBtID0gaG91cnMgPj0gMTIgPyAncG0nIDogJ2FtJztcbiAgICBob3VycyA9IGhvdXJzICUgMTI7XG4gICAgaG91cnMgPSBob3VycyA/IGhvdXJzIDogMTI7IC8vIHRoZSBob3VyICcwJyBzaG91bGQgYmUgJzEyJ1xuICAgIG1pbnV0ZXMgPSBtaW51dGVzIDwgMTAgPyAnMCcrIG1pbnV0ZXMgOiBtaW51dGVzO1xuXG4gICAgcmV0dXJuIFwiU2NyZWVuIFNob3QgXCIgKyB5ZWFyICsgXCItXCIgK1xuICAgICAgICAobW9udGggKyAxKSArIFwiLVwiICsgX2RheSArIFwiIGF0IFwiICsgaG91cnMgKyAnLicgKyBtaW51dGVzICsgJy4nICsgbWlsbGlzZWNvbmRzICsgXCIgXCIgKyBhbXBtICsgXCIucG5nXCI7XG59XG5cblxuZnVuY3Rpb24gZ29Ub1Bhc3RQYWdlU2VjdGlvbihyZXNwb25zZSkge1xuICAgIGNvbnNvbGUubG9nKFwic2Nyb2xsaW5nIHRvIFwiICsgcmVzcG9uc2UpO1xuICAgIHdpbmRvdy5zY3JvbGxUbygwLCByZXNwb25zZSk7Ly9hdXRvIHNjcm9sbCBmdW5jdGlvblxufVxuXG5mdW5jdGlvbiBsb2FkTWFya2VycyhzdGFydCxlbmQsZHVyYXRpb24pIHtcbiAgICBjb25zb2xlLmxvZyhcImxvYWQgbWFya2Vycy4uLi4uXCIpO1xuICAgIGxldCAkYmx1ZUJhciA9ICQoYmx1ZVByb2dyZXNzQmFyKTtcbiAgICBsZXQgcmF0aW8gPSBlbmQgLyBkdXJhdGlvbiAtIHN0YXJ0IC8gZHVyYXRpb24sXG4gICAgICAgIHByb3BWYWx1ZSA9IGBzY2FsZVgoJHtyYXRpb30pYDtcbiAgICAkYmx1ZUJhci5jc3MoJ2xlZnQnLCAoKHN0YXJ0IC8gZHVyYXRpb24pICogMTAwKSArICclJyk7XG4gICAgJGJsdWVCYXIuY3NzKCd0cmFuc2Zvcm0nLCBwcm9wVmFsdWUpO1xuICAgICQoJ2Rpdi55dHAtcGxheS1wcm9ncmVzcy55dHAtc3dhdGNoLWJhY2tncm91bmQtY29sb3I6bm90KC5ibHVlUHJvZ3Jlc3MpJykuYWZ0ZXIoJGJsdWVCYXIpO1xufVxuXG5cbmZ1bmN0aW9uIG1vdXNlVXBIYW5kbGVyKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBkaWZmID0ge3g6IE1hdGguYWJzKHBhcnNlSW50KGUucGFnZVgpLXBhcnNlSW50KGdob3N0RWxlbWVudC5zdHlsZS5sZWZ0KSksXG4gICAgICAgIHk6IE1hdGguYWJzKHBhcnNlSW50KGUucGFnZVkpLXBhcnNlSW50KGdob3N0RWxlbWVudC5zdHlsZS50b3ApKX07XG5cbiAgICAvL3dvcmtpbmcgd2l0aCBuZWdhdGl2ZSBjb29yZGluYXRlc1xuICAgIGxldCBfdyA9IGRpZmYueDtcbiAgICBsZXQgX2ggPSBkaWZmLnk7XG4gICAgbGV0IF94ID0gc3RhcnRQb3MueDtcbiAgICBsZXQgX3kgPSBzdGFydFk7XG5cbiAgICBpZihwYXJzZUludChlLnBhZ2VZKSA8IHN0YXJ0UG9zLnkpe1xuICAgICAgICAvL3RvcCByaWdodFxuICAgICAgICBfaCA9IE1hdGguYWJzKHBhcnNlSW50KGUucGFnZVkpLXN0YXJ0UG9zLnkpO1xuICAgICAgICBfeSAtPSBfaDtcbiAgICB9XG4gICAgaWYocGFyc2VJbnQoZS5wYWdlWCkgPCBzdGFydFBvcy54KXtcbiAgICAgICAgLy9sZWZ0IGJvdHRvbVxuICAgICAgICBfdyA9IE1hdGguYWJzKHBhcnNlSW50KGUucGFnZVgpLXN0YXJ0UG9zLngpO1xuICAgICAgICBfeCAtPSBfdztcbiAgICB9XG5cbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBtb3VzZU1vdmVIYW5kbGVyLCBmYWxzZSk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIG1vdXNlVXBIYW5kbGVyLCBmYWxzZSk7XG5cbiAgICBnaG9zdEVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnaG9zdEVsZW1lbnQpO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0IGNvb3JkcyA9IHtcbiAgICAgICAgICAgIHc6IF93LFxuICAgICAgICAgICAgaDogX2gsXG4gICAgICAgICAgICB4OiBfeCxcbiAgICAgICAgICAgIHk6IF95XG4gICAgICAgIH07XG4gICAgICAgIGVuZFNjcmVlbnNob3QoY29vcmRzLGZhbHNlKTtcbiAgICB9LCA1MCk7XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vL3F1aXQgc2NyZWVuIHNob3Rcbi8vIGZ1bmN0aW9uIGtleURvd25IYW5kbGVyKGUpIHtcbi8vICAgICBpZiAoIGUua2V5ID09PSAnRXNjYXBlJykge1xuLy8gICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4vLyAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4vLyAgICAgICAgIGVuZFNjcmVlbnNob3QobnVsbCwgdHJ1ZSk7XG4vLyAgICAgICAgIHJldHVybiBmYWxzZTtcbi8vICAgICB9XG4vLyB9XG5cblxuLyoqXG4gKlxuICogQHBhcmFtIGVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBtb3VzZU1vdmVIYW5kbGVyKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBkaWZmID0ge3g6IE1hdGguYWJzKHBhcnNlSW50KGUucGFnZVgpLXBhcnNlSW50KGdob3N0RWxlbWVudC5zdHlsZS5sZWZ0KSksXG4gICAgICAgIHk6IE1hdGguYWJzKHBhcnNlSW50KGUucGFnZVkpLXBhcnNlSW50KGdob3N0RWxlbWVudC5zdHlsZS50b3ApKX07XG5cbiAgICBnaG9zdEVsZW1lbnQuc3R5bGUud2lkdGggPSBkaWZmLnggKyAncHgnO1xuICAgIGdob3N0RWxlbWVudC5zdHlsZS5oZWlnaHQgPSBkaWZmLnkgKydweCc7XG5cbiAgICAvL29wcG9zaXRlIGRyYXdpbmcgY2FudmFzIChuZWdhdGl2ZSBjb29yZHMpXG4gICAgaWYocGFyc2VJbnQoZS5wYWdlWSkgPCBzdGFydFBvcy55KXtcbiAgICAgICAgZ2hvc3RFbGVtZW50LnN0eWxlLnRvcCA9IGUucGFnZVkgKyAncHgnO1xuICAgICAgICBnaG9zdEVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gTWF0aC5hYnMocGFyc2VJbnQoZS5wYWdlWSktc3RhcnRQb3MueSkrJ3B4JztcbiAgICB9XG4gICAgaWYocGFyc2VJbnQoZS5wYWdlWCkgPCBzdGFydFBvcy54KXtcbiAgICAgICAgZ2hvc3RFbGVtZW50LnN0eWxlLmxlZnQgPSBlLnBhZ2VYKydweCc7XG4gICAgICAgIGdob3N0RWxlbWVudC5zdHlsZS53aWR0aCA9IE1hdGguYWJzKHBhcnNlSW50KGUucGFnZVgpLXN0YXJ0UG9zLngpKydweCc7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqXG4gKiBAcGFyYW0gZVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIG1vdXNlRG93bkhhbmRsZXIoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIC8vIHN0YXJ0UG9zID0ge3g6IGUucGFnZVgsIHk6IGUucGFnZVl9O1xuICAgIC8vIHN0YXJ0WSA9IGUueTtcblxuICAgIC8vIGdob3N0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIC8vIGdob3N0RWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJ2JsdWUnO1xuICAgIC8vIGdob3N0RWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gJzAuMSc7XG4gICAgLy8gZ2hvc3RFbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAvLyBnaG9zdEVsZW1lbnQuc3R5bGUubGVmdCA9IGUucGFnZVggKyAncHgnO1xuICAgIC8vIGdob3N0RWxlbWVudC5zdHlsZS50b3AgPSBlLnBhZ2VZICsgJ3B4JztcbiAgICAvLyBnaG9zdEVsZW1lbnQuc3R5bGUud2lkdGggPSBcIjBweFwiO1xuICAgIC8vIGdob3N0RWxlbWVudC5zdHlsZS5oZWlnaHQgPSBcIjBweFwiO1xuICAgIC8vIGdob3N0RWxlbWVudC5zdHlsZS56SW5kZXggPSBcIjEwMDAwMDBcIjtcbiAgICAvLyBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGdob3N0RWxlbWVudCk7XG5cbiAgICAvLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBtb3VzZU1vdmVIYW5kbGVyLCBmYWxzZSk7XG4gICAgLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIG1vdXNlVXBIYW5kbGVyLCBmYWxzZSk7XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogU2F2ZSBwYXJ0IG9mIHBhZ2VzIHdpdGggbG9uZyBzdGF5LlxuICovXG5mdW5jdGlvbiBzY3JvbGxIYW5kbGVyKCkge1xuICAgIGVuZFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICBpZiAoZW5kVGltZSAtIHN0YXJ0VGltZSA+IExPTkdfRU5PVUdIX01TKSB7XG4gICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBcInVybFwiOiBjdXJyZW50VXJsLFxuICAgICAgICAgICAgICAgIFwic3RheVwiOiB7XCJwb3NpdGlvblwiOiBsYXN0UG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgIFwiZHVyYXRpb25cIjogZW5kVGltZSAtIHN0YXJ0VGltZSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0aW1lXCI6IFtuZXcgRGF0ZSgpXX1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmdW5jdGlvbiAocmVzcG9uc2UpIHt9KTtcbiAgICB9XG4gICAgbGFzdFBvc2l0aW9uID0gd2luZG93LnNjcm9sbFkgfHwgd2luZG93LnBhZ2VZT2Zmc2V0XG4gICAgICAgIHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wICsgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wIHx8IDApO1xuICAgIHN0YXJ0VGltZSA9IGVuZFRpbWU7XG59XG5cbi8qKlxuICogRGF0YSBmb3JtYXQ6XG4gKiA8VXJsXG4gKiAgICAgICAgICBoaWdobGlnaHQ6XG4gKiAgICAgICAgICB0ZXh0XG4gKiAgICAgICAgICBzZWN0aW9uX2lkXG4gKiAgICAgICAgICBwb3NpdGlvblxuICogICAgICAgICAgdGltZT5cbiAqL1xuZnVuY3Rpb24gc2F2ZUhpZ2hsaWdodGVkVGV4dChlKVxue1xuICAgIGxldCBjb250ZW50ID0gZXh0cmFjdFNlbGVjdGVkVGV4dCgpO1xuICAgIGlmKGNvbnRlbnQhPT0gXCJcIil7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiY3VycmVudFVybDpcIiArIGN1cnJlbnRVcmwpO1xuICAgICAgICBjb25zb2xlLmxvZyhcImN1cnJlbnRQb3NpdGlvbjpcIiArIGN1cnJlbnRQb3NpdGlvbik7XG4gICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcInVybFwiOiBjdXJyZW50VXJsLFxuICAgICAgICAgICAgICAgIFwiaGlnaGxpZ2h0XCI6XG4gICAgICAgICAgICAgICAgICAgIHtcInRleHRcIjogY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwic2VjdGlvbl9pZFwiOiBmZXRjaFNlY3Rpb25JZChlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicG9zaXRpb25cIjogY3VycmVudFBvc2l0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJ0aW1lXCI6IFtuZXcgRGF0ZSgpXX19LFxuICAgICAgICAgICAgZnVuY3Rpb24ocmVzcG9uc2UpIHt9KTtcbiAgICB9XG59XG5cbi8qKlxuICogRGF0YSBmb3JtYXQ6XG4gKiA8VXJsXG4gKiAgICAgICAgICBjb3B5OlxuICogICAgICAgICAgdGV4dFxuICogICAgICAgICAgc2VjdGlvbl9pZFxuICogICAgICAgICAgaXNfY29kZVxuICogICAgICAgICAgaXNfaW1hZ2VfdXJsXG4gKiAgICAgICAgICB0aW1lPlxuICovXG5mdW5jdGlvbiBzYXZlQ29waWVkVGV4dChlKSB7XG5cbiAgICBsZXQgY29udGVudCA9IGV4dHJhY3RTZWxlY3RlZFRleHQoKTtcbiAgICBpZihjb250ZW50IT09IFwiXCIpe1xuICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XCJ1cmxcIjogY3VycmVudFVybCxcbiAgICAgICAgICAgICAgICBcImNvcHlcIjoge1widGV4dFwiOiBjb250ZW50LFxuICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb25faWRcIjogZmV0Y2hTZWN0aW9uSWQoZSksXG4gICAgICAgICAgICAgICAgICAgIFwiaXNfY29kZVwiIDogIGlzQ29kZShlKSxcbiAgICAgICAgICAgICAgICAgICAgLy9cImlzX2ltYWdlX3VybFwiOiBpc0ltYWdlVXJsKGNvbnRlbnQpLFxuICAgICAgICAgICAgICAgICAgICBcInRpbWVcIjogW25ldyBEYXRlKCldfX0sXG4gICAgICAgICAgICBmdW5jdGlvbihyZXNwb25zZSkge30pO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhcIlNlbmRpbmchXCIpO1xufVxuXG4vKipcbiAqIEV4dHJhY3Qgc2VsZWN0ZWQgdGV4dC4gUmV0dXJucyBcIlwiIGlmIG5vIHRleHQgc2VsZWN0ZWQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBleHRyYWN0U2VsZWN0ZWRUZXh0KClcbntcbiAgICBsZXQgc2VsID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuICAgIGlmIChzZWwpIHtcbiAgICAgICAgcmV0dXJuIHNlbC50b1N0cmluZygpO1xuICAgIH1cbn1cblxuXG4vKipcbiAqIExpc3RlbiBzbmlwcGV0IGRhdGEgb25jZSBhIHZpZGVvIGVsZW1lbnQgaXMgY3JlYXRlZFxuICogRGF0YSBmb3JtYXQ6XG4gKiA8VXJsXG4gKiAgICAgICAgICBzbmlwcGV0OlxuICogICAgICAgICAgc3RhcnRfdGltZVxuICogICAgICAgICAgZW5kX3RpbWVcbiAqICAgICAgICAgIHRpbWVcbiAqICBjb250YWluc192aWRlb1xuICogIHZpZGVvX2R1cmF0aW9uPlxuICovXG5kb2N1bWVudC5hcnJpdmUoJ3ZpZGVvJywgZnVuY3Rpb24gKHYpIHtcbiAgICB2aWRlb09iaiA9IHY7XG4gICAgdmlkZW9PYmoub250aW1ldXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzUGxheWluZ1lvdXR1YmVBZCgpKSB7XG4gICAgICAgICAgICBpZiAoIWlzTmFOKHZpZGVvT2JqLmR1cmF0aW9uKSkge1xuICAgICAgICAgICAgICAgIHZpZGVvRHVyYXRpb24gPSB2aWRlb09iai5kdXJhdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGlzIGEgYmlnIGdhcCBiZXR3ZWVuIHRoZSBjdXJyZW50IHBsYXkgdGltZSBhbmQgdGhlIGxhc3QgcGxheSB0aW1lLFxuICAgICAgICAgICAgLy8gdGhlIHVzZXIgaGFzIHNraXBwZWQvcmV3aW5kIHRoZSB2aWRlb1xuICAgICAgICAgICAgaWYgKE1hdGguYWJzKHZpZGVvT2JqLmN1cnJlbnRUaW1lIC0gbGFzdFZpZGVvVGltZSkgPj0gMTApIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInNuaXBwZXQ6XCIgKyBsYXN0VmlkZW9TbmlwcGV0U3RhcnRUaW1lICsgXCIgLS0tICBcIiArIGxhc3RWaWRlb1RpbWUpO1xuICAgICAgICAgICAgICAgIGlmIChsYXN0VmlkZW9UaW1lIC0gbGFzdFZpZGVvU25pcHBldFN0YXJ0VGltZSA+IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidXJsXCI6IHZpZGVvVXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidmlkZW9fc25pcHBldFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN0YXJ0X3RpbWVcIjogbGFzdFZpZGVvU25pcHBldFN0YXJ0VGltZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZW5kX3RpbWVcIjogbGFzdFZpZGVvVGltZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZHVyYXRpb25cIjogdmlkZW9EdXJhdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGFzdFZpZGVvU25pcHBldFN0YXJ0VGltZSA9IHZpZGVvT2JqLmN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgICAgIC8vVE9ETzogaGFuZGxlIHJld2luZCBldmVudC5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxhc3RWaWRlb1RpbWUgPSB2aWRlb09iai5jdXJyZW50VGltZTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB2aWRlb09iai5vbnBhdXNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcInBhdXNlZFwiKTtcbiAgICB9O1xuXG4gICAgdmlkZW9PYmoub25lbmRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJlbmRlZFwiKTtcbiAgICB9O1xufSk7XG5cblxuZnVuY3Rpb24gc3RhcnRTY3JlZW5zaG90KCkge1xuICAgIGNvbnNvbGUubG9nKCdzdGFydCBzY3JlZW5zaG90Jyk7XG4gICAgLy9jaGFuZ2UgY3Vyc29yXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAnY3Jvc3NoYWlyJztcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBtb3VzZURvd25IYW5kbGVyLCBmYWxzZSk7XG4gICAgLy9saXN0ZW5lciBmb3IgcXVpdGluZyBzY3JlZW5zaG90XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGtleURvd25IYW5kbGVyLCBmYWxzZSk7XG59XG5cbmZ1bmN0aW9uIGVuZFNjcmVlbnNob3QoY29vcmRzLCBxdWl0KSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgbW91c2VEb3duSGFuZGxlciwgZmFsc2UpO1xuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUuY3Vyc29yID0gJ2RlZmF1bHQnO1xuXG4gICAgaWYocXVpdCl7XG4gICAgICAgIC8vdXNlciBwcmVzc2VkIEVTQyBxdWl0IHNjcmVlbnNob3QuIG5vdCBzZW5kaW5nIGFueSBpbmZvcm1hdGlvbi5cbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgbW91c2VNb3ZlSGFuZGxlciwgZmFsc2UpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgbW91c2VVcEhhbmRsZXIsIGZhbHNlKTtcblxuICAgICAgICBnaG9zdEVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnaG9zdEVsZW1lbnQpO1xuICAgIH1cbiAgICBlbHNle1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdzZW5kaW5nIG1lc3NhZ2Ugd2l0aCBzY3JlZW5zaG9vdCcpO1xuICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XCJ1cmxcIjogY3VycmVudFVybCxcbiAgICAgICAgICAgICAgICBcInNjcmVlbnNob3RcIjp7Y29vcmRpbmF0ZXM6Y29vcmRzLCBmaWxlbmFtZTogZm9ybWF0RmlsZU5hbWUobmV3IERhdGUoKSksIHRpbWU6IG5ldyBEYXRlKCl9fSxcbiAgICAgICAgICAgIGZ1bmN0aW9uKHJlc3BvbnNlKSB7fSk7XG5cbiAgICB9XG5cbn1cblxuXG4vLyBMaXN0ZW5pbmcgdXJsIGNoYW5nZXMgZm9yIHRoZSBjdXJyZW50IHRhYi5cbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lciggKG1lc3NhZ2UsIHNlbmRlciwgc2VuZFJlc3BvbnNlKSA9PiB7XG4gICAgY3VycmVudFVybD1tZXNzYWdlLnVybDtcbiAgICBpZiAobWVzc2FnZS50eXBlID09PSBcIm5ld191cmxcIil7XG4gICAgICAgIGxldCB2aWRlb1Jlc3BvbnNlPW1lc3NhZ2UudmlkZW87XG4gICAgICAgIGxldCBzdGF5UmVzcG9uc2U9bWVzc2FnZS5wb3NpdGlvbjtcbiAgICAgICAgLy9pZiBoYXMgY29kZSAsZG9uJ3QgZ28gcGFnZSBzZWN0aW9uO1xuICAgICAgICBpZighY3VycmVudFVybC5pbmNsdWRlcyhcIiNcIikpe1xuICAgICAgICAgICAgZ29Ub1Bhc3RQYWdlU2VjdGlvbihzdGF5UmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJuZXcgdXJsOlwiLCBtZXNzYWdlLnVybCk7XG4gICAgICAgICAgICB2aWRlb1VybCA9IG1lc3NhZ2UudXJsO1xuICAgICAgICAgICAgcXVlcnkgPSBtZXNzYWdlLnF1ZXJ5O1xuICAgICAgICAgICAgLy8gdG8ga25vdyBVcmwgaGFzIGFscmVhZHkgY2hhbmdlZFxuICAgICAgICAgICAgaWYgKHZpZGVvVXJsID09PSBjdXJyZW50VXJsKSB7XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRVcmwuaW5jbHVkZXMoXCJ5b3V0dWJlLmNvbVwiKSkge1xuICAgICAgICAgICAgICAgICAgICByZW1vdmVNYXJrZXJzKCk7XG4gICAgICAgICAgICAgICAgICAgIGxvYWRNYXJrZXJzKHZpZGVvUmVzcG9uc2Uuc3RhcnRfdGltZSx2aWRlb1Jlc3BvbnNlLmVuZF90aW1lLHZpZGVvUmVzcG9uc2UuZHVyYXRpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgMjAwMCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKG1lc3NhZ2UudHlwZSA9PT0gXCJzdGFydF9zY3JlZW5zaG90c1wiKXtcbiAgICAgICAgc3RhcnRTY3JlZW5zaG90KCk7XG4gICAgfVxufSk7XG5cblxuLy8gV2hlbiB0aGUgd2ViIHBhZ2UgaXMgYWJvdXQgdG8gYmUgdW5sb2FkZWQuXG53aW5kb3cub25iZWZvcmV1bmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGN1cnJlbnRVcmwuaW5jbHVkZXMoXCJ5b3V0dWJlLmNvbVwiKSkge1xuICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgXCJ1cmxcIjogdmlkZW9VcmwsXG4gICAgICAgICAgICAgICAgXCJ2aWRlb19zbmlwcGV0XCI6XG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwic3RhcnRfdGltZVwiOiBsYXN0VmlkZW9TbmlwcGV0U3RhcnRUaW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJlbmRfdGltZVwiOiBsYXN0VmlkZW9UaW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJkdXJhdGlvblwiOiB2aWRlb0R1cmF0aW9uXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmdW5jdGlvbiAocmVzcG9uc2UpIHt9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBvbmx5IGNvbnNpZGVycyBzY3JvbGxpbmcgcG9zaXRpb25zIHdoZW4gdGhlIHdlYiBwYWdlIGlzIG5vdCB2aWRlb1xuICAgICAgICBlbmRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgIGlmIChlbmRUaW1lIC0gc3RhcnRUaW1lID4gTE9OR19FTk9VR0hfTVMpIHtcbiAgICAgICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgXCJ1cmxcIjogY3VycmVudFVybCxcbiAgICAgICAgICAgICAgICAgICAgXCJzdGF5XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicG9zaXRpb25cIjogbGFzdFBvc2l0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJkdXJhdGlvblwiOiBlbmRUaW1lIC0gc3RhcnRUaW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJ0aW1lXCI6IFtuZXcgRGF0ZSgpXVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAocmVzcG9uc2UpIHt9KTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NvcHknLCBzYXZlQ29waWVkVGV4dCk7XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgc2F2ZUhpZ2hsaWdodGVkVGV4dCk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgc2Nyb2xsSGFuZGxlcik7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/content.js\n");

/***/ })

})