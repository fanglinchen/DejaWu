webpackHotUpdate("content",{

/***/ "./src/js/content.js":
/*!***************************!*\
  !*** ./src/js/content.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var siphon_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! siphon-tools */ \"./node_modules/siphon-tools/src/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _snippet_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./snippet_tooltip */ \"./src/js/snippet_tooltip.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\nvar _jsxFileName = \"/Users/yusenwang/Desktop/DejaWu/src/js/content.js\",\n    _this = undefined;\n\n\n\n\nvar blueProgressBar = \"<div class=\\\"ytp-play-progress ytp-swatch-background-color blueProgress\\\"></div>\";\n__webpack_require__(/*! arrive */ \"./node_modules/arrive/src/arrive.js\");\n\n\n\nvar videoObj = void 0,\n    videoDuration = void 0,\n    query = void 0,\n    videoUrl = void 0;\nvar currentUrl = document.location.href;\nvar startTime = new Date().getTime();\nvar endTime = new Date().getTime();\nvar currentPosition = void 0,\n    lastPosition = void 0,\n    lastVideoTime = void 0,\n    lastVideoSnippetStartTime = 0;\nvar LONG_ENOUGH_MS = 8000;\nvar ghostElement = void 0,\n    startPos = void 0,\n    startY = void 0;\nvar _cptrWindow = void 0;\nvar rect = void 0;\n\nvar test;\n\n\n\nsiphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"default\"].initializeSelectors([Object(siphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"SnippetSelector\"])({\n    onTrigger: function onTrigger(cptrWindow, e) {\n        _cptrWindow = cptrWindow;\n        rect = cptrWindow.getBoundingClientRect();\n        console.log(rect);\n        var annotation = new siphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"Snippet\"](rect);\n        console.log(annotation);\n\n        console.log(\"test keydown\");\n        document.addEventListener('keydown', keyDownHandler, false);\n        document.addEventListener('mousedown', mouseDownHandler, false);\n        document.addEventListener('mouseup', mouseUpHandler, false);\n\n        react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_snippet_tooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n            },\n            __self: _this\n        }), domContainerNode);\n    }\n})]);\n\nsiphon_tools__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable();\n\n// setTimeout(()=>{\n//     _cptrWindow.remove()\n// }, 5000)\n\nfunction isPlayingYoutubeAd() {\n    return jquery__WEBPACK_IMPORTED_MODULE_2___default()(\".ytp-play-progress\").css(\"background-color\") === \"rgb(255, 204, 0)\";\n}\n\n/**\n * handle pressing esc to quit screenshot\n * @param {*} e \n */\nfunction keyDownHandler(e) {\n    if (e.key === 'Escape') {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log(\"esc pressed\");\n        document.removeEventListener('mousedown', mouseDownHandler, false);\n        document.removeEventListener('keydown', keyDownHandler, false);\n        _cptrWindow.parentNode.removeChild(_cptrWindow);\n\n        // _cptrWindow.remove()\n\n        return false;\n    }\n}\n\nfunction removeMarkers() {\n    console.log(\"remove markers...\");\n    jquery__WEBPACK_IMPORTED_MODULE_2___default()('div.ytp-play-progress.ytp-swatch-background-color').remove('.blueProgress');\n}\n\nfunction isCode(e) {\n    var cur = e.target;\n    while (cur.tagName.toLowerCase() !== \"code\" && (cur = cur.parentNode) !== document.body) {}\n    //If the highest element tracked by the cursor can be ascribed to <code>.\n    return cur.tagName.toLowerCase() === \"code\";\n}\n\nfunction fetchSectionId(e) {\n    var cur = e ? e.target : null;\n    if (cur) while (!cur.hasAttribute(\"id\") && (cur = cur.parentNode) !== document.body) {}\n    return cur && (cur.getAttribute(\"id\") || null);\n}\n\nfunction formatFileName(date) {\n    var year = date.getFullYear();\n    var _day = date.getDate();\n    var month = date.getMonth();\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var milliseconds = date.getMilliseconds();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n\n    return \"Screen Shot \" + year + \"-\" + (month + 1) + \"-\" + _day + \" at \" + hours + '.' + minutes + '.' + milliseconds + \" \" + ampm + \".png\";\n}\n\nfunction goToPastPageSection(response) {\n    console.log(\"scrolling to \" + response);\n    window.scrollTo(0, response); //auto scroll function\n}\n\nfunction loadMarkers(start, end, duration) {\n    console.log(\"load markers.....\");\n    var $blueBar = jquery__WEBPACK_IMPORTED_MODULE_2___default()(blueProgressBar);\n    var ratio = end / duration - start / duration,\n        propValue = \"scaleX(\" + ratio + \")\";\n    $blueBar.css('left', start / duration * 100 + '%');\n    $blueBar.css('transform', propValue);\n    jquery__WEBPACK_IMPORTED_MODULE_2___default()('div.ytp-play-progress.ytp-swatch-background-color:not(.blueProgress)').after($blueBar);\n}\n\nfunction mouseUpHandler(e) {\n    e.preventDefault();\n\n    // const diff = {x: Math.abs(parseInt(e.pageX)-parseInt(ghostElement.style.left)),\n    //     y: Math.abs(parseInt(e.pageY)-parseInt(ghostElement.style.top))};\n    //\n    // //working with negative coordinates\n    // let _w = diff.x;\n    // let _h = diff.y;\n    // let _x = startPos.x;\n    // let _y = startY;\n    //\n    // if(parseInt(e.pageY) < startPos.y){\n    //     //top right\n    //     _h = Math.abs(parseInt(e.pageY)-startPos.y);\n    //     _y -= _h;\n    // }\n    // if(parseInt(e.pageX) < startPos.x){\n    //     //left bottom\n    //     _w = Math.abs(parseInt(e.pageX)-startPos.x);\n    //     _x -= _w;\n    // }\n    //\n    // document.removeEventListener('mousemove', mouseMoveHandler, false);\n    // document.removeEventListener('mouseup', mouseUpHandler, false);\n    //\n    // ghostElement.parentNode.removeChild(ghostElement);\n    // setTimeout(function() {\n    //     const coords = {\n    //         w: _w,\n    //         h: _h,\n    //         x: _x,\n    //         y: _y\n    //     };\n    //     endScreenshot(coords,false);\n    // }, 50);\n\n    console.log(e.pageY);\n    console.log(e.pageX);\n\n    return false;\n}\n//quit screen shot\n// function keyDownHandler(e) {\n//     if ( e.key === 'Escape') {\n//         e.preventDefault();\n//         e.stopPropagation();\n//         endScreenshot(null, true);\n//         return false;\n//     }\n// }\n\n\n/**\n *\n * @param e\n * @returns {boolean}\n */\nfunction mouseMoveHandler(e) {\n    e.preventDefault();\n\n    var diff = { x: Math.abs(parseInt(e.pageX) - parseInt(ghostElement.style.left)),\n        y: Math.abs(parseInt(e.pageY) - parseInt(ghostElement.style.top)) };\n\n    ghostElement.style.width = diff.x + 'px';\n    ghostElement.style.height = diff.y + 'px';\n\n    //opposite drawing canvas (negative coords)\n    if (parseInt(e.pageY) < startPos.y) {\n        ghostElement.style.top = e.pageY + 'px';\n        ghostElement.style.height = Math.abs(parseInt(e.pageY) - startPos.y) + 'px';\n    }\n    if (parseInt(e.pageX) < startPos.x) {\n        ghostElement.style.left = e.pageX + 'px';\n        ghostElement.style.width = Math.abs(parseInt(e.pageX) - startPos.x) + 'px';\n    }\n\n    return false;\n}\n\n/**\n *\n * @param e\n * @returns {boolean}\n */\nfunction mouseDownHandler(e) {\n    e.preventDefault();\n\n    // startPos = {x: e.pageX, y: e.pageY};\n    // startY = e.y;\n\n    // ghostElement = document.createElement('div');\n    // ghostElement.style.background = 'blue';\n    // ghostElement.style.opacity = '0.1';\n    // ghostElement.style.position = 'absolute';\n    // ghostElement.style.left = e.pageX + 'px';\n    // ghostElement.style.top = e.pageY + 'px';\n    // ghostElement.style.width = \"0px\";\n    // ghostElement.style.height = \"0px\";\n    // ghostElement.style.zIndex = \"1000000\";\n    // document.body.appendChild(ghostElement);\n\n    // document.addEventListener('mousemove', mouseMoveHandler, false);\n    // document.addEventListener('mouseup', mouseUpHandler, false);\n    var x = e.pageX;\n    var y = e.pageY;\n    var w = e.width;\n    var h = e.height;\n\n    if (!(x < rect.x && y < rect.y && w < rect.width && h < rect.height)) {\n        // mouse is not in rect.\n        document.removeEventListener('mousedown', mouseDownHandler, false);\n        document.removeEventListener('keydown', keyDownHandler, false);\n        console.log(\"remove frome first\");\n        _cptrWindow.remove();\n        // test.hideButton();test.hideButton();\n    }\n\n    return false;\n}\n\n/**\n * Save part of pages with long stay.\n */\nfunction scrollHandler() {\n    endTime = new Date().getTime();\n    if (!currentUrl.includes(\"youtube.com\")) {\n        if (endTime - startTime > LONG_ENOUGH_MS) {\n            chrome.runtime.sendMessage({\n                \"url\": currentUrl,\n                \"stay\": {\n                    \"position\": lastPosition,\n                    \"duration\": endTime - startTime,\n                    \"time\": [new Date()]\n                }\n            }, function (response) {});\n        }\n    }\n    lastPosition = window.scrollY || window.pageYOffset || document.body.scrollTop + (document.documentElement && document.documentElement.scrollTop || 0);\n    startTime = endTime;\n}\n\n/**\n * Data format:\n * <Url\n *          highlight:\n *          text\n *          section_id\n *          position\n *          time>\n */\nfunction saveHighlightedText(e) {\n    var content = extractSelectedText();\n    if (content !== \"\") {\n        console.log(\"currentUrl:\" + currentUrl);\n        console.log(\"currentPosition:\" + currentPosition);\n        chrome.runtime.sendMessage({ \"url\": currentUrl,\n            \"highlight\": { \"text\": content,\n                \"section_id\": fetchSectionId(e),\n                \"position\": currentPosition,\n                \"time\": [new Date()] } }, function (response) {});\n    }\n}\n\n/**\n * Data format:\n * <Url\n *          copy:\n *          text\n *          section_id\n *          is_code\n *          is_image_url\n *          time>\n */\nfunction saveCopiedText(e) {\n\n    var content = extractSelectedText();\n    if (content !== \"\") {\n        chrome.runtime.sendMessage({ \"url\": currentUrl,\n            \"copy\": { \"text\": content,\n                \"section_id\": fetchSectionId(e),\n                \"is_code\": isCode(e),\n                //\"is_image_url\": isImageUrl(content),\n                \"time\": [new Date()] } }, function (response) {});\n    }\n    console.log(\"Sending!\");\n}\n\n/**\n * Extract selected text. Returns \"\" if no text selected.\n * @returns {string}\n */\nfunction extractSelectedText() {\n    var sel = window.getSelection();\n    if (sel) {\n        return sel.toString();\n    }\n}\n\n/**\n * Listen snippet data once a video element is created\n * Data format:\n * <Url\n *          snippet:\n *          start_time\n *          end_time\n *          time\n *  contains_video\n *  video_duration>\n */\ndocument.arrive('video', function (v) {\n    videoObj = v;\n    videoObj.ontimeupdate = function () {\n        if (!isPlayingYoutubeAd()) {\n            if (!isNaN(videoObj.duration)) {\n                videoDuration = videoObj.duration;\n            }\n            // if there is a big gap between the current play time and the last play time,\n            // the user has skipped/rewind the video\n            if (Math.abs(videoObj.currentTime - lastVideoTime) >= 10) {\n                console.log(\"snippet:\" + lastVideoSnippetStartTime + \" ---  \" + lastVideoTime);\n                if (lastVideoTime - lastVideoSnippetStartTime > 3) {\n                    chrome.runtime.sendMessage({\n                        \"url\": videoUrl,\n                        \"video_snippet\": {\n                            \"start_time\": lastVideoSnippetStartTime,\n                            \"end_time\": lastVideoTime,\n                            \"duration\": videoDuration\n                        }\n                    }, function (response) {});\n                }\n                lastVideoSnippetStartTime = videoObj.currentTime;\n                //TODO: handle rewind event.\n            }\n            lastVideoTime = videoObj.currentTime;\n        }\n    };\n\n    videoObj.onpause = function () {\n        console.log(\"paused\");\n    };\n\n    videoObj.onended = function () {\n        console.log(\"ended\");\n    };\n});\n\nfunction startScreenshot() {\n    console.log('start screenshot');\n    //change cursor\n    document.body.style.cursor = 'crosshair';\n    document.addEventListener('mousedown', mouseDownHandler, false);\n    //listener for quiting screenshot\n    document.addEventListener('keydown', keyDownHandler, false);\n}\n\nfunction endScreenshot(coords, quit) {\n    document.removeEventListener('mousedown', mouseDownHandler, false);\n    document.body.style.cursor = 'default';\n\n    if (quit) {\n        //user pressed ESC quit screenshot. not sending any information.\n        document.removeEventListener('mousemove', mouseMoveHandler, false);\n        document.removeEventListener('mouseup', mouseUpHandler, false);\n\n        ghostElement.parentNode.removeChild(ghostElement);\n    } else {\n\n        console.log('sending message with screenshoot');\n        chrome.runtime.sendMessage({ \"url\": currentUrl,\n            \"screenshot\": { coordinates: coords, filename: formatFileName(new Date()), time: new Date() } }, function (response) {});\n    }\n}\n\n// Listening url changes for the current tab.\nchrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {\n    currentUrl = message.url;\n    if (message.type === \"new_url\") {\n        var videoResponse = message.video;\n        var stayResponse = message.position;\n        //if has code ,don't go page section;\n        if (!document.location.href.includes(\"#\")) {\n            if (stayResponse) {\n                goToPastPageSection(stayResponse);\n            }\n        }\n        setTimeout(function () {\n            console.log(\"new url:\", message.url);\n            videoUrl = message.url;\n            query = message.query;\n            // to know Url has already changed\n            if (videoUrl === currentUrl) {\n                if (currentUrl.includes(\"youtube.com\")) {\n                    removeMarkers();\n                    loadMarkers(videoResponse.start_time, videoResponse.end_time, videoResponse.duration);\n                }\n            }\n        }, 2000);\n    } else if (message.type === \"start_screenshots\") {\n        startScreenshot();\n    }\n});\n\n// When the web page is about to be unloaded.\nwindow.onbeforeunload = function () {\n    if (currentUrl.includes(\"youtube.com\")) {\n        chrome.runtime.sendMessage({\n            \"url\": videoUrl,\n            \"video_snippet\": {\n                \"start_time\": lastVideoSnippetStartTime,\n                \"end_time\": lastVideoTime,\n                \"duration\": videoDuration\n            }\n        }, function (response) {});\n    } else {\n        // only considers scrolling positions when the web page is not video\n        endTime = new Date().getTime();\n        if (endTime - startTime > LONG_ENOUGH_MS) {\n            chrome.runtime.sendMessage({\n                \"url\": currentUrl,\n                \"stay\": {\n                    \"position\": lastPosition,\n                    \"duration\": endTime - startTime,\n                    \"time\": [new Date()]\n                }\n            }, function (response) {});\n        }\n    }\n};\n\nvar domContainerNode = document.createElement('div');\ndomContainerNode.setAttribute('id', 'test-div');\ndomContainerNode.style.position = 'fixed';\n//TODO: @yusen change here to update the position according to the snippet position.\ndomContainerNode.style.top = rect.top / 2 + \"px\";\ndomContainerNode.style.left = rect.left / 2 + \"px\";\n\ndocument.body.appendChild(domContainerNode);\n\ndocument.addEventListener('copy', saveCopiedText);\ndocument.addEventListener('mouseup', saveHighlightedText);\nwindow.addEventListener('scroll', scrollHandler);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/content.js\n");

/***/ })

})